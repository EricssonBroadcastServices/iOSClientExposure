# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.28.7"

default_platform :ios

platform :ios do
    before_all do
        
    end
    
    
    
    desc "Bumps build number and runs unit tests on each push to development branch"
    desc "If successful, pushes the bumped version to git"
    lane :development do
        ensure_git_branch(branch: "development")
        ensure_git_status_clean
        update_dependencies
        
        bump_build_number
        
        run_unit_tests
        
        clean_build_artifacts
        
        push_to_git_remote
        
        notify_slack_dev_success
    end
    
    
    desc "Runs all the tests"
    lane :run_unit_tests do
        
        scan(
             workspace: "Exposure.xcworkspace",
             scheme: "Exposure"
             )
             
        UI.success("====> TESTING DONE")
    end
    
    
    
    # Private lanes
    
    private_lane :bump_build_number do
        new_build_number = increment_build_number(xcodeproj: "Exposure.xcodeproj")
        UI.message("Build: #{new_build_number}")
        commit_version_bump(
                            message: "Build number bumped: #{new_build_number}",
                            xcodeproj: "Exposure.xcodeproj"
                            )
    end
    
    desc "Checkout latest dependencies"
    desc "Note: This will update Cartfile.resolved if dependencies have changed."
    desc "Ensuring a clean git status after update_dependencies is therefore not possible"
    desc "under certain circumstances"
    private_lane :update_dependencies do
        carthage(
                 command: "update",
                 platform: "iOS",
                 use_submodules: true,
                 use_ssh: true,
                 use_binaries: false
                 )
    end
    
    desc "Posts a success notification for development integration"
    desc "in the Players channel on Slack"
    lane :notify_slack_dev_success do
        current_build_number = get_build_number
        current_time = Time.now.to_f
        UI.message(current_time)
        slack(
              use_webhook_configured_username_and_icon: true,
              default_payloads: [],
              attachment_properties: {
                    pretext: "Exposure build #{current_build_number} succesful!",
                    color: "good",
                    text: "Temporary placeholder for change log",
                    footer: "EMP dev",
                    ts: current_time,
                }
              )
    end
    
    after_all do |lane|
        # This block is called, only if the executed lane was successful
        
    end
    
    error do |lane, exception|
        
        slack(
              message: exception.message,
              success: false
              )
        
        UI.error("====> ERROR")
    end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
